Script is created to backup KVM virtual machines with libvirt.

By design, it greps all VM's disk files (targets), making snapshots for their state to ensure no file transactions will be lost.
It copies snapshot disk file to backup folder and then merges snapshots.
Also it has a cleaning mechanism for old backups.


Log file for script is /var/log/kvm.backup-domains.log.


Script is getting following parameters:
	-f  -   Path to config file with all parameters. 
	        If this parameter specified - no other parameters are allowed to avoid human mistakes. 
			For config file, see example ./kvm.backup-domains.conf.example.
	
	-n	-	Name of VM/Domain to backup. If not provided - script will backup all VMs on this server.

	-c	-	Count of backups to store. If not provided - script is using 6 copies by default. 
			Script sorting backup folder by name and removing the oldest.

	-p	-	Path to backup folder. If not provided - will use default path "/datastore/backup". 
			It should be the root folder for backups. Script will handle creating sub-folders for each VM by itself.
			
	-r  -   Integer amount of days, during which latest backup will be considered as relevant and newer backups will be skipped.
	        '0' by default.


Examples:
    ### Backup using parameters from config file.
	$ sudo bash ./kvm.backup-domains.bash -f ./kvm.backup-domains.conf   
	
	### If last backup was performed earlier than 2 days, skip it. 
	### Otherwise, backup 'vm-name' VM, keep '4' copies, backup to '/datastore/backup' folder.
	$ sudo bash ./kvm.backup-domains.bash -n "vm-name" -c 4 -p "/datastore/backup" -r 2   
	
	### Backup 'vm-name' VM now, keep '4' copies. Ignore last backup date.
	$ sudo bash ./kvm.backup-domains.bash -n "vm-name" -c 4   # Backup 'vm-name' VM, keep '4' copies.
	
	### Backup ALL VMs on server now, keep '4' copies, use default path to backups.
	$ sudo bash ./kvm.backup-domains.bash -c 4